[config]
default_to_workspace = false

[env]
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = true

[tasks.format]
install_crate = "rustfmt"
command = "cargo"
args = ["fmt", "--", "--emit=files"]

[tasks.clean]
command = "cargo"
args = ["clean"]

[tasks.build-git-hooks]
command = "cargo"
args = ["build", "--bin", "pre-commit", "--release"]

[tasks.install-git-hooks]
command = "git"
args = ["config", "core.hooksPath", "target/release"]
dependencies = ["build-git-hooks"]

[tasks.build-wasm]
install_crate = { crate_name = "wasm-pack", binary = "wasm-pack", test_arg = "--help" }
command = "wasm-pack"
args = ["build", "--target", "web", "--out-dir", "../../target/pkg", "examples/playground"]
dependencies = ["install-git-hooks"]

[tasks.build]
command = "cp"
args = ["examples/playground/assets/index.html", "target/pkg/"]
dependencies = ["build-wasm"]

[tasks.serve]
install_crate = { crate_name = "miniserve", binary = "miniserve", test_arg = "--help" }
command = "miniserve"
args = ["target/pkg", "--index", "index.html"]
dependencies = ["build"]

[tasks.watch]
install_crate = { crate_name = "bacon", binary = "bacon", test_arg = "--help" }
command = "bacon"
args = ["watch"]

[tasks.licenses]
install_crate = { crate_name = "cargo-about", binary = "cargo-about", test_arg = "--help" }
command = "cargo"
args = [
    "about", "generate",
    "--config", "./licenses/about.toml",
    "./licenses/about.hbs",
    "--output-file", "./licenses/licenses.html"
]
